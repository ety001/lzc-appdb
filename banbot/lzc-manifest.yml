lzc-sdk-version: 0.1
name: Banbot
package: ink.akawa.ety001.banbot
version: 0.0.4
description: Banbot is a high-performance, easy-to-use, multi-symbol, multi-strategy, multi-period, multi-account event-driven trading robot.
license: https://github.com/banbox/banbot?tab=AGPL-3.0-1-ov-file#readme
homepage: https://www.banbot.site/
author: banbot
usage: |
  首次安装后, 如果需要使用代理访问, 可以通过下面的方法设置：
  1. 本地创建一个文件, 文件名为 "envfile", 文件内容为：
  http_proxy=http://192.168.1.11:8001
  https_proxy=http://192.168.1.11:8001
  2. 替换上面的代理地址为你的代理地址后, 保存并上传到 "应用数据" => "banbot" => "config" 目录
  3. 重启应用后, 应用会自动读取并应用代理设置
  注意: 从 v0.0.3 版本即 banbot v0.2.8 开始, banbot 配置文件也支持配置代理, 配置方法参见 banbot 官方文档, https://www.banbot.site。
min_os_version: 1.3.0
application:
  subdomain: banbot
  background_task: true
  multi_instance: false
  routes:
    - /=http://banbot.ink.akawa.ety001.banbot.lzcapp:8000
services:
  banbot:
    # banbot/banbot:v0.2.14
    image: registry.lazycat.cloud/ety001/banbot/banbot:bb56ca8c99c7579d
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      - timescaledb
    binds:
      - /lzcapp/var/config:/config
      - /lzcapp/var/data:/ban/data
      - /lzcapp/var/strats:/ban/strats
    entrypoint: /lzcapp/pkg/content/init.sh
  timescaledb:
    image: registry.lazycat.cloud/ety001/timescale/timescaledb:a7eb4b43d24c842e
    environment:
      - TZ=Asia/Shanghai
      - POSTGRES_PASSWORD=123456
    binds:
      - /lzcapp/var/pgdata:/var/lib/postgresql/data
    health_check:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres", "-h", "localhost"]
      start_period: 60s
locales:
  zh:
    description: "Banbot是一款高性能、易用的多币种、多策略、多周期、多账户事件驱动交易机器人"
    usage: |
      首次安装后, 如果需要使用代理访问, 可以通过下面的方法设置：
      1. 本地创建一个文件, 文件名为 "envfile", 文件内容为：
      HTTP_PROXY=http://192.168.1.11:8001
      HTTPS_PROXY=http://192.168.1.11:8001
      2. 替换上面的代理地址为你的代理地址后, 保存并上传到 "应用数据" => "banbot" => "config" 目录
      3. 重启应用后, 应用会自动读取并应用代理设置
      注意: 从 v0.0.3 版本即 banbot v0.2.8 开始, banbot 配置文件也支持配置代理, 配置方法参见 banbot 官方文档, https://www.banbot.site。
  zh_CN:
    description: "Banbot是一款高性能、易用的多币种、多策略、多周期、多账户事件驱动交易机器人"
    usage: |
      首次安装后, 如果需要使用代理访问, 可以通过下面的方法设置：
      1. 本地创建一个文件, 文件名为 "envfile", 文件内容为：
      HTTP_PROXY=http://192.168.1.11:8001
      HTTPS_PROXY=http://192.168.1.11:8001
      2. 替换上面的代理地址为你的代理地址后, 保存并上传到 "应用数据" => "banbot" => "config" 目录
      3. 重启应用后, 应用会自动读取并应用代理设置
      注意: 从 v0.0.3 版本即 banbot v0.2.8 开始, banbot 配置文件也支持配置代理, 配置方法参见 banbot 官方文档, https://www.banbot.site。
  en:
    description: "Banbot is a high-performance, easy-to-use, multi-symbol, multi-strategy, multi-period, multi-account event-driven trading robot"
    usage: |
      After the first installation, if you need to access the proxy, you can set it up in the following way:
      1. Create a file locally, the file name is "envfile", and the content is:
      HTTP_PROXY=http://192.168.1.11:8001
      HTTPS_PROXY=http://192.168.1.11:8001
      2. Replace the proxy address in the above with your own proxy address and save it to the "Application Data" => "banbot" => "config" directory.
      3. Restart the application, and the application will automatically read and apply the proxy settings.
      Note: From v0.0.3, banbot v0.2.8, the banbot configuration file also supports configuration proxy, and the configuration method is described in the banbot official documentation, https://www.banbot.site.
